management:
  endpoints:
    web:
      exposure:
        include: health,info
    jmx:
      exposure:
        include: health,info
  info:
    env:
      enabled: 'true'
  health:
    livenessState:
      enabled: 'true'
    readinessState:
      enabled: 'true'
  endpoint:
    health:
      probes:
        enabled: 'true'
info:
  application:
    name: 'Flussi MBD'
    version: '@project.version@'
    description: '@project.description@'
    artifactId: '@project.artifactId@'
  properties:
    environment: ${ENV:local}
azure:
  cosmos:
    database: db
    uri: ${COSMOS_URI:https://pagopa-d-weu-bizevents-ds-cosmos-account.documents.azure.com:443/}
    key: ${COSMOS_KEY:-}
    populate-query-metrics: 'false'
    endpoint-discovery-enabled: ${COSMOS_ENDPOINT_DISCOVERY_ENABLED:false}
    preferred-regions: ${COSMOS_PREFERRED_REGIONS:West Europe,North Europe}
mbd:
  cache:
    refresh:
      enabled: ${CACHE_REFRESH_ENABLED:true}
      cron: ${CACHE_REFRESH_CRON:-}
  rendicontazioni:
    filePath: ${HOME}
    maxVRecords: ${MAX_RECORD_V_PER_FILE:100_000}
    generate:
      enabled: ${RENDICONTAZIONI_GENERATE_ENABLED:true}
      cron: ${RENDICONTAZIONI_GENERATE_CRON:-}
client:
  cache:
    url: ${CLIENT_CACHE_URL:none}
    api-key: ${CLIENT_CACHE_SUBKEY:none}
    read-timeout: ${CLIENT_CACHE_READ_TIMEOUT:5000}
    connect-timeout: ${CLIENT_CACHE_READ_TIMEOUT:5000}
    keys: version, stations, configurations, psps, creditorInstitutions
  ftp:
    enabled: ${CLIENT_FTP_ENABLED:false}
    host: ${CLIENT_FTP_HOST:none}
    port: ${CLIENT_FTP_PORT:none}
    username: ${CLIENT_FTP_USERNAME:none}
    password: ${CLIENT_FTP_PASSWORD:none}
exception:
  error-code:
    uri: ${ERROR_CODE_URI:https://pagopa:gov/error-code}
spring:
  url: jdbc:mysql://localhost:3306/library
  username: root
  password: your_password
  driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
springdoc:
  writer-with-order-by-keys: 'true'
  writer-with-default-pretty-printer: 'true'
  model-and-view-allowed: 'true'
log:
  server:
    request:
      pretty: 'true'
      include-client-info: 'true'
      max-payload-length: '10000'
      include-payload: 'true'
      include-headers: 'true'
    response:
      max-payload-length: '10000'
      pretty: 'true'
      include-headers: 'true'
      include-payload: 'true'
  client:
    cache:
      response:
        include-payload: 'false'
        include-headers: 'true'
        pretty: 'true'
        max-payload-length: '10000'
      request:
        max-payload-length: '10000'
        include-payload: 'true'
        include-headers: 'true'
        mask-header-name: ${CLIENT_CONFIG_API_KEY_NAME:Ocp-Apim-Subscription-Key}
        pretty: 'true'
logging:
  level:
    com.azure.cosmos.implementation.SqlQuerySpecLogger: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE
    org.springframework.web: DEBUG
    root: ${DEFAULT_LOGGING_LEVEL:INFO}
    it.gov.pagopa.mbd.util:
      interceptor.AppServerLoggingInterceptor: DEBUG
      client.apiconfigcache.ApiConfigCacheClientLoggingInterceptor: DEBUG
otel:
  service:
    name: ${OTEL_SERVICE_NAME:pagopa-wisp-converter}
filter:
  exclude-url-patterns: '/swagger-ui/**,/v3/api-docs/**,/actuator/**:'
cors:
  configuration: "${CORS_CONFIGURATION:{\"origins\": [\"*\"], \"methods\": [\"*\"]}'}'"
server:
  servlet:
    context-path: /
  port: '8080'
